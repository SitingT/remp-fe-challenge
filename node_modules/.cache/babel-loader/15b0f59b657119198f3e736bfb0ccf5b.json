{"ast":null,"code":"var _jsxFileName = \"/Users/sitingtang/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [approvalStatuses, setApprovalStatuses] = useState({});\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    // Update the local state\n    setApprovalStatuses(prev => ({ ...prev,\n      [transactionId]: newValue\n    })); // Update the data source\n\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n  }, [fetchWithoutCache]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => {\n      var _approvalStatuses$tra;\n\n      return /*#__PURE__*/_jsxDEV(TransactionPane, {\n        transaction: transaction,\n        loading: loading,\n        setTransactionApproval: setTransactionApproval,\n        approved: (_approvalStatuses$tra = approvalStatuses[transaction.id]) !== null && _approvalStatuses$tra !== void 0 ? _approvalStatuses$tra : transaction.approved\n      }, transaction.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"lomrF/11rzIjIR3tbQvmxN2Jzr0=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useState","useCustomFetch","TransactionPane","Transactions","transactions","fetchWithoutCache","loading","approvalStatuses","setApprovalStatuses","setTransactionApproval","transactionId","newValue","prev","value","map","transaction","id","approved"],"sources":["/Users/sitingtang/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n  const [approvalStatuses, setApprovalStatuses] = useState<{ [transactionId: string]: boolean }>({})\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      // Update the local state\n      setApprovalStatuses((prev) => ({ ...prev, [transactionId]: newValue }))\n\n      // Update the data source\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n    },\n    [fetchWithoutCache]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n          approved={approvalStatuses[transaction.id] ?? transaction.approved}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCL,cAAc,EAArD;EACA,MAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAuC,EAAvC,CAAxD;EAEA,MAAMS,sBAAsB,GAAGV,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEW,aAAF;MAAiBC;IAAjB,CAAgC;IACrC;IACAH,mBAAmB,CAAEI,IAAD,KAAW,EAAE,GAAGA,IAAL;MAAW,CAACF,aAAD,GAAiBC;IAA5B,CAAX,CAAD,CAAnB,CAFqC,CAIrC;;IACA,MAAMN,iBAAiB,CAAqC,wBAArC,EAA+D;MACpFK,aADoF;MAEpFG,KAAK,EAAEF;IAF6E,CAA/D,CAAvB;EAID,CAVuC,EAWxC,CAACN,iBAAD,CAXwC,CAA1C;;EAcA,IAAID,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACU,GAAb,CAAkBC,WAAD;MAAA;;MAAA,oBAChB,QAAC,eAAD;QAEE,WAAW,EAAEA,WAFf;QAGE,OAAO,EAAET,OAHX;QAIE,sBAAsB,EAAEG,sBAJ1B;QAKE,QAAQ,2BAAEF,gBAAgB,CAACQ,WAAW,CAACC,EAAb,CAAlB,yEAAsCD,WAAW,CAACE;MAL5D,GACOF,WAAW,CAACC,EADnB;QAAA;QAAA;QAAA;MAAA,QADgB;IAAA,CAAjB;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAnCM;;GAAMb,Y;UAC4BF,c;;;KAD5BE,Y"},"metadata":{},"sourceType":"module"}