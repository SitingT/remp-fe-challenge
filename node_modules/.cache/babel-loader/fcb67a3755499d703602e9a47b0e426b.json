{"ast":null,"code":"var _jsxFileName = \"/Users/sitingtang/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { useApprovalStatus } from \"src/context /approval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    approvalStatuses,\n    setApprovalStatuses\n  } = useApprovalStatus(); // const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n  //   async ({ transactionId, newValue }) => {\n  //     await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n  //       transactionId,\n  //       value: newValue,\n  //     })\n  //   },\n  //   [fetchWithoutCache]\n  // )\n\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    // Update the approval status in the context\n    setApprovalStatuses({ ...approvalStatuses,\n      [transactionId]: newValue\n    });\n  }, [approvalStatuses, setApprovalStatuses]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval,\n      approved: approvalStatuses[transaction.id] !== undefined ? approvalStatuses[transaction.id] : transaction.approved\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"wcnT25jW8eUNJst0Q8+YiHRqRwM=\", false, function () {\n  return [useApprovalStatus];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","TransactionPane","useApprovalStatus","Transactions","transactions","approvalStatuses","setApprovalStatuses","setTransactionApproval","transactionId","newValue","map","transaction","loading","id","undefined","approved"],"sources":["/Users/sitingtang/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\nimport { useApprovalStatus } from \"src/context /approval\"\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { approvalStatuses, setApprovalStatuses } = useApprovalStatus()\n\n  // const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n  //   async ({ transactionId, newValue }) => {\n  //     await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n  //       transactionId,\n  //       value: newValue,\n  //     })\n  //   },\n  //   [fetchWithoutCache]\n  // )\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      // Update the approval status in the context\n      setApprovalStatuses({\n        ...approvalStatuses,\n        [transactionId]: newValue,\n      })\n    },\n    [approvalStatuses, setApprovalStatuses]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n          approved={\n            approvalStatuses[transaction.id] !== undefined\n              ? approvalStatuses[transaction.id]\n              : transaction.approved\n          }\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,gBAAF;IAAoBC;EAApB,IAA4CJ,iBAAiB,EAAnE,CADuE,CAGvE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,MAAMK,sBAAsB,GAAGP,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEQ,aAAF;MAAiBC;IAAjB,CAAgC;IACrC;IACAH,mBAAmB,CAAC,EAClB,GAAGD,gBADe;MAElB,CAACG,aAAD,GAAiBC;IAFC,CAAD,CAAnB;EAID,CAPuC,EAQxC,CAACJ,gBAAD,EAAmBC,mBAAnB,CARwC,CAA1C;;EAWA,IAAIF,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACM,GAAb,CAAkBC,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEC,OAHX;MAIE,sBAAsB,EAAEL,sBAJ1B;MAKE,QAAQ,EACNF,gBAAgB,CAACM,WAAW,CAACE,EAAb,CAAhB,KAAqCC,SAArC,GACIT,gBAAgB,CAACM,WAAW,CAACE,EAAb,CADpB,GAEIF,WAAW,CAACI;IARpB,GACOJ,WAAW,CAACE,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA5CM;;GAAMV,Y;UACuCD,iB;;;KADvCC,Y"},"metadata":{},"sourceType":"module"}