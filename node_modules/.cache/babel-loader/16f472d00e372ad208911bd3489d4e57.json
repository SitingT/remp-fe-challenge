{"ast":null,"code":"// import { useCallback } from \"react\"\n// import { useCustomFetch } from \"src/hooks/useCustomFetch\"\n// import { SetTransactionApprovalParams } from \"src/utils/types\"\n// import { TransactionPane } from \"./TransactionPane\"\n// import { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n// export const Transactions: TransactionsComponent = ({ transactions }) => {\n//   const { fetchWithoutCache, loading } = useCustomFetch()\n//   const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n//     async ({ transactionId, newValue }) => {\n//       await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n//         transactionId,\n//         value: newValue,\n//       })\n//     },\n//     [fetchWithoutCache]\n//   )\n//   if (transactions === null) {\n//     return <div className=\"RampLoading--container\">Loading...</div>\n//   }\n//   return (\n//     <div data-testid=\"transaction-container\">\n//       {transactions.map((transaction) => (\n//         <TransactionPane\n//           key={transaction.id}\n//           transaction={transaction}\n//           loading={loading}\n//           setTransactionApproval={setTransactionApproval}\n//         />\n//       ))}\n//     </div>\n//   )\n// }","map":{"version":3,"names":[],"sources":["/Users/sitingtang/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["// import { useCallback } from \"react\"\n// import { useCustomFetch } from \"src/hooks/useCustomFetch\"\n// import { SetTransactionApprovalParams } from \"src/utils/types\"\n// import { TransactionPane } from \"./TransactionPane\"\n// import { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\n// export const Transactions: TransactionsComponent = ({ transactions }) => {\n//   const { fetchWithoutCache, loading } = useCustomFetch()\n\n//   const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n//     async ({ transactionId, newValue }) => {\n//       await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n//         transactionId,\n//         value: newValue,\n//       })\n//     },\n//     [fetchWithoutCache]\n//   )\n\n//   if (transactions === null) {\n//     return <div className=\"RampLoading--container\">Loading...</div>\n//   }\n\n//   return (\n//     <div data-testid=\"transaction-container\">\n//       {transactions.map((transaction) => (\n//         <TransactionPane\n//           key={transaction.id}\n//           transaction={transaction}\n//           loading={loading}\n//           setTransactionApproval={setTransactionApproval}\n//         />\n//       ))}\n//     </div>\n//   )\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}