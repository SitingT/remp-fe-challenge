{"ast":null,"code":"var _jsxFileName = \"/Users/sitingtang/Desktop/remp-fe-challenge/src/context /approval.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApprovalContext = /*#__PURE__*/createContext(undefined);\nexport const ApprovalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [approvalStatuses, setApprovalStatuses] = useState({});\n  return /*#__PURE__*/_jsxDEV(ApprovalContext.Provider, {\n    value: {\n      approvalStatuses,\n      setApprovalStatuses\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApprovalProvider, \"t3uz2n/c4sHv4boLkFaT8fYq7oc=\");\n\n_c = ApprovalProvider;\nexport const useApprovalStatus = () => {\n  _s2();\n\n  const context = useContext(ApprovalContext);\n\n  if (!context) {\n    throw new Error(\"useApprovalStatus must be used within an ApprovalProvider\");\n  }\n\n  return context;\n};\n\n_s2(useApprovalStatus, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ApprovalProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","ApprovalContext","undefined","ApprovalProvider","children","approvalStatuses","setApprovalStatuses","useApprovalStatus","context","Error"],"sources":["/Users/sitingtang/Desktop/remp-fe-challenge/src/context /approval.tsx"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\"\n\ntype ApprovalStatusContextType = {\n  approvalStatuses: { [key: string]: boolean }\n  setApprovalStatuses: React.Dispatch<React.SetStateAction<{ [key: string]: boolean }>>\n}\n\nconst ApprovalContext = createContext<ApprovalStatusContextType | undefined>(undefined)\n\ntype ApprovalProviderProps = {\n  children: React.ReactNode\n}\n\nexport const ApprovalProvider = ({ children }: ApprovalProviderProps) => {\n  const [approvalStatuses, setApprovalStatuses] = useState<{ [key: string]: boolean }>({})\n  return (\n    <ApprovalContext.Provider value={{ approvalStatuses, setApprovalStatuses }}>\n      {children}\n    </ApprovalContext.Provider>\n  )\n}\n\nexport const useApprovalStatus = () => {\n  const context = useContext(ApprovalContext)\n  if (!context) {\n    throw new Error(\"useApprovalStatus must be used within an ApprovalProvider\")\n  }\n  return context\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;;AAOA,MAAMC,eAAe,gBAAGH,aAAa,CAAwCI,SAAxC,CAArC;AAMA,OAAO,MAAMC,gBAAgB,GAAG,QAAyC;EAAA;;EAAA,IAAxC;IAAEC;EAAF,CAAwC;EACvE,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAA6B,EAA7B,CAAxD;EACA,oBACE,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAAEM,gBAAF;MAAoBC;IAApB,CAAjC;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAPM;;GAAMD,gB;;KAAAA,gB;AASb,OAAO,MAAMI,iBAAiB,GAAG,MAAM;EAAA;;EACrC,MAAMC,OAAO,GAAGR,UAAU,CAACC,eAAD,CAA1B;;EACA,IAAI,CAACO,OAAL,EAAc;IACZ,MAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;EACD;;EACD,OAAOD,OAAP;AACD,CANM;;IAAMD,iB"},"metadata":{},"sourceType":"module"}