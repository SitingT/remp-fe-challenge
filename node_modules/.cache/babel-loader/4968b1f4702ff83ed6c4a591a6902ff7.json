{"ast":null,"code":"var _jsxFileName = \"/Users/sitingtang/Desktop/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// export const TransactionPane: TransactionPaneComponent = ({\n//   transaction,\n//   loading,\n//   setTransactionApproval: consumerSetTransactionApproval,\n// }) => {\n//   const [approved, setApproved] = useState(transaction.approved)\n//   useEffect(() => {\n//     setApproved(transaction.approved)\n//   }, [transaction.approved])\n//   const handleApprovalChange = (newValue: boolean) => {\n//     setApproved(newValue)\n//     consumerSetTransactionApproval({ transactionId: transaction.id, newValue })\n//   }\nexport const TransactionPane = _ref => {\n  let {\n    transaction,\n    loading,\n    setTransactionApproval: consumerSetTransactionApproval,\n    approved // Receive the prop here\n\n  } = _ref;\n\n  // Remove the local state management for \"approved\"\n  // const [approved, setApproved] = useState(transaction.approved)\n  // useEffect(() => {\n  //   setApproved(transaction.approved)\n  // }, [transaction.approved])\n  const handleApprovalChange = newValue => {\n    // setApproved(newValue) // Remove this line\n    consumerSetTransactionApproval({\n      transactionId: transaction.id,\n      newValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved,\n      disabled: loading // onChange={(newValue) => {\n      //   setApproved(newValue)\n      // }}\n      ,\n      onChange: handleApprovalChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["InputCheckbox","TransactionPane","transaction","loading","setTransactionApproval","consumerSetTransactionApproval","approved","handleApprovalChange","newValue","transactionId","id","merchant","moneyFormatter","format","amount","employee","firstName","lastName","date","Intl","NumberFormat","style","currency"],"sources":["/Users/sitingtang/Desktop/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { InputCheckbox } from \"../InputCheckbox\"\nimport { TransactionPaneComponent } from \"./types\"\n\n// export const TransactionPane: TransactionPaneComponent = ({\n//   transaction,\n//   loading,\n//   setTransactionApproval: consumerSetTransactionApproval,\n// }) => {\n//   const [approved, setApproved] = useState(transaction.approved)\n//   useEffect(() => {\n//     setApproved(transaction.approved)\n//   }, [transaction.approved])\n\n//   const handleApprovalChange = (newValue: boolean) => {\n//     setApproved(newValue)\n//     consumerSetTransactionApproval({ transactionId: transaction.id, newValue })\n//   }\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval,\n  approved, // Receive the prop here\n}) => {\n  // Remove the local state management for \"approved\"\n  // const [approved, setApproved] = useState(transaction.approved)\n  // useEffect(() => {\n  //   setApproved(transaction.approved)\n  // }, [transaction.approved])\n\n  const handleApprovalChange = (newValue: boolean) => {\n    // setApproved(newValue) // Remove this line\n    consumerSetTransactionApproval({ transactionId: transaction.id, newValue })\n  }\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant} </p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved}\n        disabled={loading}\n        // onChange={(newValue) => {\n        //   setApproved(newValue)\n        // }}\n        onChange={handleApprovalChange}\n      />\n    </div>\n  )\n}\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\n"],"mappings":";AACA,SAASA,aAAT,QAA8B,kBAA9B;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAyC,GAAG,QAKnD;EAAA,IALoD;IACxDC,WADwD;IAExDC,OAFwD;IAGxDC,sBAAsB,EAAEC,8BAHgC;IAIxDC,QAJwD,CAI9C;;EAJ8C,CAKpD;;EACJ;EACA;EACA;EACA;EACA;EAEA,MAAMC,oBAAoB,GAAIC,QAAD,IAAuB;IAClD;IACAH,8BAA8B,CAAC;MAAEI,aAAa,EAAEP,WAAW,CAACQ,EAA7B;MAAiCF;IAAjC,CAAD,CAA9B;EACD,CAHD;;EAIA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,WAAyBN,WAAW,CAACS,QAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC,cAAc,CAACC,MAAf,CAAsBX,WAAW,CAACY,MAAlC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,8BAAb;QAAA,WACGZ,WAAW,CAACa,QAAZ,CAAqBC,SADxB,OACoCd,WAAW,CAACa,QAAZ,CAAqBE,QADzD,SACsEf,WAAW,CAACgB,IADlF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,aAAD;MACE,EAAE,EAAEhB,WAAW,CAACQ,EADlB;MAEE,OAAO,EAAEJ,QAFX;MAGE,QAAQ,EAAEH,OAHZ,CAIE;MACA;MACA;MANF;MAOE,QAAQ,EAAEI;IAPZ;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CApCM;KAAMN,e;AAsCb,MAAMW,cAAc,GAAG,IAAIO,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE;AAF0C,CAA/B,CAAvB"},"metadata":{},"sourceType":"module"}