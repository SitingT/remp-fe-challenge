{"ast":null,"code":"var _jsxFileName = \"/Users/sitingtang/Desktop/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = _ref => {\n  let {\n    transaction,\n    loading,\n    approved,\n    // New prop for the approval status\n    onApprovalChange // New prop for handling changes to the approval status\n\n  } = _ref;\n\n  const handleApprovalChange = newValue => {\n    onApprovalChange(transaction.id, newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved // Using the approved prop\n      ,\n      disabled: loading,\n      onChange: handleApprovalChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n}); // export const TransactionPane: TransactionPaneComponent = ({\n//   transaction,\n//   loading,\n//   setTransactionApproval: consumerSetTransactionApproval,\n// }) => {\n//   const [approved, setApproved] = useState(transaction.approved)\n//   useEffect(() => {\n//     setApproved(transaction.approved)\n//   }, [transaction.approved])\n//   const handleApprovalChange = (newValue: boolean) => {\n//     setApproved(newValue)\n//     consumerSetTransactionApproval({ transactionId: transaction.id, newValue })\n//   }\n//   return (\n//     <div className=\"RampPane\">\n//       <div className=\"RampPane--content\">\n//         <p className=\"RampText\">{transaction.merchant} </p>\n//         <b>{moneyFormatter.format(transaction.amount)}</b>\n//         <p className=\"RampText--hushed RampText--s\">\n//           {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n//         </p>\n//       </div>\n//       <InputCheckbox\n//         id={transaction.id}\n//         checked={approved}\n//         disabled={loading}\n//         // onChange={(newValue) => {\n//         //   setApproved(newValue)\n//         // }}\n//         onChange={handleApprovalChange}\n//       />\n//       {/* <input\n//         type=\"checkbox\"\n//         id={transaction.id}\n//         checked={approved}\n//         disabled={loading}\n//         onChange={(e) => {\n//           setApproved(e.target.checked)\n//         }}\n//       /> */}\n//     </div>\n//   )\n// }\n// const moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n//   style: \"currency\",\n//   currency: \"USD\",\n// })\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["InputCheckbox","TransactionPane","transaction","loading","approved","onApprovalChange","handleApprovalChange","newValue","id","merchant","moneyFormatter","format","amount","employee","firstName","lastName","date","Intl","NumberFormat","style","currency"],"sources":["/Users/sitingtang/Desktop/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { InputCheckbox } from \"../InputCheckbox\"\nimport { TransactionPaneComponent } from \"./types\"\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  approved, // New prop for the approval status\n  onApprovalChange, // New prop for handling changes to the approval status\n}) => {\n  const handleApprovalChange = (newValue: boolean) => {\n    onApprovalChange(transaction.id, newValue)\n  }\n\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant} </p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved} // Using the approved prop\n        disabled={loading}\n        onChange={handleApprovalChange}\n      />\n    </div>\n  )\n}\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\n\n// export const TransactionPane: TransactionPaneComponent = ({\n//   transaction,\n//   loading,\n//   setTransactionApproval: consumerSetTransactionApproval,\n// }) => {\n//   const [approved, setApproved] = useState(transaction.approved)\n//   useEffect(() => {\n//     setApproved(transaction.approved)\n//   }, [transaction.approved])\n\n//   const handleApprovalChange = (newValue: boolean) => {\n//     setApproved(newValue)\n//     consumerSetTransactionApproval({ transactionId: transaction.id, newValue })\n//   }\n//   return (\n//     <div className=\"RampPane\">\n//       <div className=\"RampPane--content\">\n//         <p className=\"RampText\">{transaction.merchant} </p>\n//         <b>{moneyFormatter.format(transaction.amount)}</b>\n//         <p className=\"RampText--hushed RampText--s\">\n//           {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n//         </p>\n//       </div>\n//       <InputCheckbox\n//         id={transaction.id}\n//         checked={approved}\n//         disabled={loading}\n//         // onChange={(newValue) => {\n//         //   setApproved(newValue)\n//         // }}\n//         onChange={handleApprovalChange}\n//       />\n//       {/* <input\n//         type=\"checkbox\"\n//         id={transaction.id}\n//         checked={approved}\n//         disabled={loading}\n//         onChange={(e) => {\n//           setApproved(e.target.checked)\n//         }}\n//       /> */}\n//     </div>\n//   )\n// }\n\n// const moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n//   style: \"currency\",\n//   currency: \"USD\",\n// })\n"],"mappings":";AACA,SAASA,aAAT,QAA8B,kBAA9B;;AAGA,OAAO,MAAMC,eAAyC,GAAG,QAKnD;EAAA,IALoD;IACxDC,WADwD;IAExDC,OAFwD;IAGxDC,QAHwD;IAG9C;IACVC,gBAJwD,CAItC;;EAJsC,CAKpD;;EACJ,MAAMC,oBAAoB,GAAIC,QAAD,IAAuB;IAClDF,gBAAgB,CAACH,WAAW,CAACM,EAAb,EAAiBD,QAAjB,CAAhB;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,WAAyBL,WAAW,CAACO,QAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC,cAAc,CAACC,MAAf,CAAsBT,WAAW,CAACU,MAAlC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,8BAAb;QAAA,WACGV,WAAW,CAACW,QAAZ,CAAqBC,SADxB,OACoCZ,WAAW,CAACW,QAAZ,CAAqBE,QADzD,SACsEb,WAAW,CAACc,IADlF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,aAAD;MACE,EAAE,EAAEd,WAAW,CAACM,EADlB;MAEE,OAAO,EAAEJ,QAFX,CAEqB;MAFrB;MAGE,QAAQ,EAAED,OAHZ;MAIE,QAAQ,EAAEG;IAJZ;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA3BM;KAAML,e;AA6Bb,MAAMS,cAAc,GAAG,IAAIO,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE;AAF0C,CAA/B,CAAvB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}